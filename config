# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#


# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
# Restore Wall on startup
exec --no-startup-id nitrogen --restore
exec_always --no-startup-id picom --config ~/.config/i3/picom.conf -b
exec_always --no-startup-id blueman-applet
exec_always --no-startup-id autotiling
bindsym Print exec --no-startup-id "maim -s -o | tee /home/pragun/Pictures/Screenshots/$(date +%F-%H:%M:%S).png | xclip -selection clipboard -t image/png"

# Launch Apps
bindsym $mod+space exec "flatpak run app.zen_browser.zen"
bindsym $mod+a exec "rofi -show drun"
bindsym $mod+c exec "code"
bindsym $mod+e exec "nautilus"
bindsym $mod+Escape exec "i3lock"

gaps inner 8
gaps outer 1








# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:JetBrainsMono Nerd Font 14


# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
# Original: start XDG autostart .desktop files
# Disabled original dex autostart line and run dex with IBUS_ENABLE_SYSTRAY=0
# so that ibus won't create a system tray icon (prevents EN showing in tray)
# exec --no-startup-id dex --autostart --environment i3
exec --no-startup-id env IBUS_ENABLE_SYSTRAY=0 dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Auto-show/hide i3bar when mouse is at top of screen
# Requires: python3-xlib (or xdotool as fallback)
# Managed by systemd user service: auto-bar-hover.service
# (removed exec line - systemd handles startup and restarts)

# Use pactl to adjust volume in PulseAudio.
# Old i3status refresh (commented out)
# set $refresh_i3status killall -SIGUSR1 i3status
# bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
# bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
# bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
# bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# New i3blocks volume bindings with signal
set $refresh_i3status killall -SIGUSR1 i3status
set $volctl /home/pragun/.config/i3blocks/scripts/volume/volume-ctl
set $volmax 150
bindsym XF86AudioRaiseVolume exec --no-startup-id MAX_PERCENT=$volmax $volctl up 10 && pkill -RTMIN+10 i3blocks
bindsym XF86AudioLowerVolume exec --no-startup-id MAX_PERCENT=$volmax $volctl down 10 && pkill -RTMIN+10 i3blocks
bindsym XF86AudioMute exec --no-startup-id $volctl toggle && pkill -RTMIN+10 i3blocks
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && pkill -RTMIN+10 i3blocks

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# Brightness Controls
# XF86 brightness keys (for keyboards with dedicated brightness keys)
bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl set +10% && pkill -RTMIN+12 i3blocks
bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl set 10%- && pkill -RTMIN+12 i3blocks

# F5/F6 brightness controls
bindsym F5 exec --no-startup-id brightnessctl set 10%- && pkill -RTMIN+12 i3blocks
bindsym F6 exec --no-startup-id brightnessctl set +10% && pkill -RTMIN+12 i3blocks

# Alternative: xbacklight method (fallback)
# bindsym F5 exec --no-startup-id xbacklight -dec 10
# bindsym F6 exec --no-startup-id xbacklight -inc 10

# Media Player Controls
# Control media playback with keyboard media keys (system-wide)
bindsym XF86AudioPlay exec --no-startup-id playerctl play-pause
bindsym XF86AudioPause exec --no-startup-id playerctl play-pause
bindsym XF86AudioNext exec --no-startup-id playerctl next
bindsym XF86AudioPrev exec --no-startup-id playerctl previous

# start a terminal
bindsym $mod+t exec alacritty

# Kill Active Window
bindsym $mod+q kill

# start dmenu (a program launcher) ----- DMENU DISABLED( ROFI BYPASS)
#bindsym $mod+d exec --no-startup-id dmenu_run
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -shog drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
#bindsym $mod+t layout toggle split  # Preserved for reference in case toggle split is needed in the future

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# Toggle i3bar (dock/hide) with Mod+b - bar takes space and pushes windows
bindsym $mod+b exec --no-startup-id i3-msg 'bar mode toggle'

# focus the parent container

# focus the child container
# The following line is kept as a reference in case you want to enable focusing the child container in the future.
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# Toggle to previously used workspace (Windows+Tab)
# This uses the built-in back_and_forth workspace command available in i3
bindsym $mod+Tab workspace back_and_forth

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {  
       status_command SCRIPT_DIR=~/.config/i3blocks/scripts i3blocks 
        mode hide
        hidden_state hide
        modifier Mod4
        position top
       #status_command exec /home/pragun/.config/i3status/mybar.sh
       #separator_symbol "<200b>"

}

